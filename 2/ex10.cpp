#include <stdio.h>
#include <omp.h>

int main() {
    // Пример 10 иллюстрирует применение опции copyprivate.
    // после выполнения нити, содержащей конструкцию single, новые значения переменных списка будут доступны всем одноименным частным переменным (private и 
    // firstprivate), описанным в начале параллельной области и используемым всеми её нитями;
    int n;
    #pragma omp parallel private(n)
    {
    	// определение номера нити в области
        n = omp_get_thread_num();
        printf("Значение n (начало): %d\n", n);
        // Если в параллельной области какой-либо участок кода должен быть выполнен лишь один раз, то его нужно выделить директивами single.
        #pragma omp single copyprivate(n)
            n = 100;
            printf("Значение n (конец): %d\n", n);
    }
}
